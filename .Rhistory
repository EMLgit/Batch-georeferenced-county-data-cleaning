install.packages("sf")
#libraries
library(sf)
library(tigris)
library(cdlTools) #this is probably new to you; install it
library(ggplot2)
#load coordinate data
coords <- read.csv("/Users/elizabethlombardi/Desktop/Research/UNM/Fixing Herbarium County data/unmbatchrefissues.csv", header=TRUE)
coords.sf <- as.data.frame(coords) %>%
filter(!decimalLongitude=="") %>%
filter(!decimalLatitude=="") %>%
st_as_sf(coords=c("decimalLongitude","decimalLatitude"), crs=4326, remove=FALSE) %>%
st_transform(crs=4326)
library(tigris)
#load county data from Tigris package
nm <- counties("New Mexico")
nm.prj <- st_as_sf(nm) %>%
st_transform(crs=4326)
#plot to make sure; looks okay to me
ggplot() +
geom_sf(data = nm.prj, fill = "lightblue") +
geom_sf(data = coords.sf, color = "red", size = 3, shape = 17) +
theme_minimal()
coords.sf <- as.data.frame(coords) %>%
filter(!decimalLongitude=="") %>%
filter(!decimalLatitude=="") %>%
st_as_sf(coords=c("decimalLongitude","decimalLatitude"), crs=4326, remove=FALSE) %>%
st_transform(crs=4326)
names(coords)
coords$decimalLatitude
coords$decimalLatitude
coords.sf <- as.data.frame(coords) %>%
filter(!decimalLongitude=="") %>%
filter(!decimalLatitude=="") %>%
st_as_sf(coords=c("decimalLongitude","decimalLatitude"), crs=4326, remove=FALSE) %>%
st_transform(crs=4326)
#load coordinate data
input <- read.csv("/Users/elizabethlombardi/Desktop/Research/UNM/Fixing Herbarium County data/unmbatchrefissues.csv", header=TRUE)
coords.sf <- as.data.frame(input) %>%
filter(!decimalLongitude == "") %>%
filter(!decimalLatitude == "") %>%
st_as_sf(coords=c("decimalLongitude","decimalLatitude"), crs=4326, remove=FALSE) %>%
st_transform(crs=4326)
unmbatchrefissues <- read.csv("~/Desktop/Research/UNM/Fixing Herbarium County data/unmbatchrefissues.csv")
View(unmbatchrefissues)
#load coordinate data
coords<- read.csv("~/Desktop/Research/UNM/Fixing Herbarium County data/unmbatchrefissues.csv")
coords.sf <- as.data.frame(coords) %>%
filter(!decimalLongitude == "") %>%
filter(!decimalLatitude == "") %>%
st_as_sf(coords=c("decimalLongitude","decimalLatitude"), crs=4326, remove=FALSE) %>%
st_transform(crs=4326)
library(dpl)
library(dplyr)
coords.sf <- as.data.frame(coords) %>%
filter(!decimalLongitude == "") %>%
filter(!decimalLatitude == "") %>%
st_as_sf(coords=c("decimalLongitude","decimalLatitude"), crs=4326, remove=FALSE) %>%
st_transform(crs=4326)
#load county data from Tigris package
nm <- counties("New Mexico")
nm.prj <- st_as_sf(nm) %>%
st_transform(crs=4326)
#plot to make sure; looks okay to me
ggplot() +
geom_sf(data = nm.prj, fill = "lightblue") +
geom_sf(data = coords.sf, color = "red", size = 3, shape = 17) +
theme_minimal()
#Join coords to layer of county boundaries. DUPLICATING RECORDS. 522-ish rows added
coords.sf <- coords.sf %>%
st_join(left = TRUE, nm.prj["NAME"])
coords.sf <- coords.sf %>%
mutate(county.orig = str_remove_all(county, " County")) %>%
mutate(county.match = mapply(grepl, county.orig, NAME))
coords.mismatch <- coords.sf %>%
filter(county.match == "FALSE")
write.csv(coords.mismatch, "/Users/elizabethlombardi/Desktop/Research/UNM/Fixing Herbarium County data/coords.mismatch.csv")
View(coords.sf)
coords.sf <- coords.sf %>%
mutate(county.orig = str_remove_all(county, " County")) %>%
mutate(county.match = mapply(grepl, county.orig, NAME))
library(tidyr)
coords.sf <- coords.sf %>%
mutate(county.orig = str_remove_all(county, " County")) %>%
mutate(county.match = mapply(grepl, county.orig, NAME))
library(stringr)
coords.sf <- coords.sf %>%
mutate(county.orig = str_remove_all(county, " County")) %>%
mutate(county.match = mapply(grepl, county.orig, NAME))
coords.mismatch <- coords.sf %>%
filter(county.match == "FALSE")
write.csv(coords.mismatch, "/Users/elizabethlombardi/Desktop/Research/UNM/Fixing Herbarium County data/coords.mismatch.csv")
##Try calculating minimum distance between each coordinate and the nearest county line
try <- coords.sf %>%
sf::sf_nearest_feature(nm.prj)
Version(sf)
package_version(sf)
package_version("sf")
package_version('sf')
